// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TECBank.Backend.Repository.DataContext;

#nullable disable

namespace TECBank.Backend.Migrations
{
    [DbContext(typeof(TecBankContext))]
    [Migration("20230417112959_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("TECBank.Backend.Domains.Models.ContaCorrente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ExcluidoEm")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContasCorrentes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CriadoEm = new DateTimeOffset(new DateTime(2023, 4, 17, 8, 29, 58, 934, DateTimeKind.Unspecified).AddTicks(7272), new TimeSpan(0, -3, 0, 0, 0)),
                            Saldo = 0m
                        });
                });

            modelBuilder.Entity("TECBank.Backend.Domains.Models.Transacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<long>("ContaCorrenteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ExcluidoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Historico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoOperacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("TECBank.Backend.Domains.Models.Transacao", b =>
                {
                    b.HasOne("TECBank.Backend.Domains.Models.ContaCorrente", "ContaCorrente")
                        .WithMany("Transacoes")
                        .HasForeignKey("ContaCorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaCorrente");
                });

            modelBuilder.Entity("TECBank.Backend.Domains.Models.ContaCorrente", b =>
                {
                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
