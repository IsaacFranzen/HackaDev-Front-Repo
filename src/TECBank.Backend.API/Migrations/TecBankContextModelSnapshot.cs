// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TECBank.Backend.Repository.DataContext;

#nullable disable

namespace TECBank.Backend.Migrations
{
    [DbContext(typeof(TecBankContext))]
    partial class TecBankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Domain.Model.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("AlteradoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("EnderecoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("ExcluidoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Naturalidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomePai")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Patrimonio")
                        .HasColumnType("REAL");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("RendaMensal")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("RgDataEmissao")
                        .HasColumnType("TEXT");

                    b.Property<string>("RgEstado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RgNumero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RgOrgaoExpedidor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sexo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelefoneCelular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneEmpresa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneResidencial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AlteradoEm = new DateTimeOffset(new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -3, 0, 0, 0)),
                            Cpf = "12345678911",
                            CriadoEm = new DateTimeOffset(new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -3, 0, 0, 0)),
                            Email = "jackson@gmail.com",
                            EnderecoId = 1L,
                            EstadoCivil = 0,
                            ExcluidoEm = new DateTimeOffset(new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -3, 0, 0, 0)),
                            Nacionalidade = "brasileiro",
                            Naturalidade = "São Paulo",
                            Nome = "Jackson",
                            NomeEmpresa = "TIOne",
                            NomeMae = "Doraci",
                            NomePai = "Geraldo",
                            Patrimonio = 100000.0,
                            Profissao = "DEV",
                            RendaMensal = 5000.0,
                            RgDataEmissao = new DateTime(1995, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RgEstado = "SP",
                            RgNumero = "12345678",
                            RgOrgaoExpedidor = "SSP",
                            Sexo = 1,
                            TelefoneCelular = "991357585",
                            TelefoneEmpresa = "33224455",
                            TelefoneResidencial = "39060697"
                        });
                });

            modelBuilder.Entity("Domain.Model.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("AlteradoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ExcluidoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AlteradoEm = new DateTimeOffset(new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -3, 0, 0, 0)),
                            Cidade = "Sao Paulo",
                            CriadoEm = new DateTimeOffset(new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -3, 0, 0, 0)),
                            ExcluidoEm = new DateTimeOffset(new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -3, 0, 0, 0)),
                            Logradouro = "Rua Sao Paulo",
                            Numero = "524"
                        });
                });

            modelBuilder.Entity("Domain.Model.Cliente", b =>
                {
                    b.HasOne("Domain.Model.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
